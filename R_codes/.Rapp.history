get_ump_power <- function(dat,test="UMP"){#
beta <- seq(0.01,2.5, by=..05)#
dat_pow <- NULL#
for(n in c(100)){#
  for(sg in c(5)){#
     pow <- NULL#
     x <- getx(100)#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg,x=x))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
}}#
dat_pow$test <- test	#
return(dat_pow)#
}
dat_emp_pow <- get_smooth_power(dat)#
dat_ump_pow <- get_ump_power(dat)#
#
p <- ggplot(dat_emp_pow,aes(beta,pow)) + geom_line(aes(colour=test))#
p <- p + geom_line(aes(beta,pow, colour=test), data=dat_ump_pow)#
p <- p + facet_grid(sample_size~sigma)#
p + xlab(expression(beta))+ylab("Power")
dat_emp_pow <- get_smooth_power(dat)
head(dat_emp_pow)
tail(dat_emp_pow)
library(ggplot2)
dat <- read.csv("../data/feedback_data_turk3_50p.txt")
getx <- function(n){#
	x1 <- rnorm(n,0,1)#
	nc <- 15*n/100#
	x2 <- rnorm(n=nc,mean=-1.75, sd=1/3)#
	return(c(x2,x1))#
}
calculate_ump_power <- function (beta, n, sigma,x){#
       alpha <- 0.05#
       sigmasq <- sigma^2#
       beta_not <- 0#
       df <- n-1 # one parameter(s)#
       se_beta <- sqrt(sigmasq/sum((x-mean(x))^2))#
       mu <- beta/se_beta#
       alpha <- alpha/2#
       t_n <- qt(p=1-alpha,df=df)#
       res <- pt(q=-t_n, df=df, ncp=mu)-pt(q=t_n, df=df, ncp=mu)+1#
       return(res)#
}#
#
calculate_ump_power(beta=.1,n=100,sigma=5,x=getx(100))
#
fit <- loess(as.numeric(response) ~ abs(beta),data=dat,span=1.5)#
betas <- seq(0,2.5,by=.05)#
with(dat,qplot(betas,predict(fit,data.frame(beta=betas))))
get_smooth_power <- function(dat.n,test="Empirical"){#
betas <- seq(0.01,2.5, by=0.05)#
dat_smooth <- NULL#
for (s in c(5)){#
	for (n in c(100)){#
		dats <- subset(dat.n,sigma==s & sample_size==n)#
		dats$y <- as.numeric(dats$response)#
		fit <- loess(y ~ abs(beta),data=dats,span=1+(n==100)*.3)#
		dat_smooth <- rbind(dat_smooth,cbind(betas,predict(fit,betas),n,s))#
		}#
	}#
colnames(dat_smooth) <- c("beta","pow","sample_size","sigma")#
dat_empirical <- data.frame(rbind(dat_smooth,cbind(-dat_smooth[,1],dat_smooth[,-1])))#
dat_empirical$test <- test#
return(dat_empirical)#
}
get_ump_power <- function(dat,test="UMP"){#
beta <- seq(0.01,2.5, by=..05)#
dat_pow <- NULL#
for(n in c(100)){#
  for(sg in c(5)){#
     pow <- NULL#
     x <- getx(100)#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg,x=x))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
}}#
dat_pow$test <- test	#
return(dat_pow)#
}
dat_emp_pow <- get_smooth_power(dat)#
dat_ump_pow <- get_ump_power(dat)#
#
p <- ggplot(dat_emp_pow,aes(beta,pow)) + geom_line(aes(colour=test))#
p <- p + geom_line(aes(beta,pow, colour=test), data=dat_ump_pow)#
p <- p + facet_grid(sample_size~sigma)#
p + xlab(expression(beta))+ylab("Power")
calculate_ump_power <- function (beta, n, sigma,x){#
       alpha <- 0.05#
       sigmasq <- sigma^2#
       beta_not <- 0#
       df <- n-1 # one parameter(s)#
       se_beta <- sqrt(sigmasq/sum((x-mean(x))^2))#
       mu <- beta/se_beta#
       alpha <- alpha/2#
       t_n <- qt(p=1-alpha,df=df)#
       res <- pt(q=-t_n, df=df, ncp=mu)-pt(q=t_n, df=df, ncp=mu)+1#
       return(res)#
}#
#
calculate_ump_power(beta=.1,n=100,sigma=5,x=getx(100))
get_ump_power <- function(dat,test="UMP"){#
beta <- seq(0.01,2.5, by=..05)#
dat_pow <- NULL#
for(n in c(100)){#
  for(sg in c(5)){#
     pow <- NULL#
     x <- getx(100)#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg,x=x))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
}}#
dat_pow$test <- test	#
return(dat_pow)#
}
dat_ump_pow <- get_ump_power(dat)
calculate_ump_power(beta=i,n=n,sigma=sg,x=x)
sg=5
n=100
i=1
calculate_ump_power(beta=i,n=n,sigma=sg,x=x)
     x <- getx(100)
calculate_ump_power(beta=i,n=n,sigma=sg,x=x)
beta <- seq(0.01,2.5, by=..05)
get_ump_power <- function(dat,test="UMP"){#
beta <- seq(0.01,2.5, by=0.05)#
dat_pow <- NULL#
for(n in c(100)){#
  for(sg in c(5)){#
     pow <- NULL#
     x <- getx(100)#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg,x=x))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
}}#
dat_pow$test <- test	#
return(dat_pow)#
}
dat_ump_pow <- get_ump_power(dat)
p <- ggplot(dat_emp_pow,aes(beta,pow)) + geom_line(aes(colour=test))#
p <- p + geom_line(aes(beta,pow, colour=test), data=dat_ump_pow)#
p <- p + facet_grid(sample_size~sigma)#
p + xlab(expression(beta))+ylab("Power")
dat_boot_pow <- NULL#
for (i in 1:1000){#
dat.b <- ddply(dat,.(abs(beta),sample_size,sigma), summarize,#
           response = sample(response,replace=T)#
           )#
colnames(dat.b) <- c("beta", colnames(dat.b)[-1])#
dat_boot_pow <- rbind(dat_boot_pow,get_smooth_power(dat.b,test=paste("smooth",i,sep="")))#
}#
write.csv(dat_boot_pow,file="../data/dat_bootstrap_power3.txt",row.names=F)
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1]))
#
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
ggsave(p, filename="../images/power_loess_exp3.pdf")
dat <- read.csv("../data/feedback_data_turk3_50p.txt")
library(ggplot2)
getx <- function(n){#
	x1 <- rnorm(n,0,1)#
	nc <- 15*n/100#
	x2 <- rnorm(n=nc,mean=-1.75, sd=1/3)#
	return(c(x2,x1))#
}
calculate_ump_power <- function (beta, n, sigma,x){#
       alpha <- 0.05#
       sigmasq <- sigma^2#
       beta_not <- 0#
       df <- n-1 # one parameter(s)#
       se_beta <- sqrt(sigmasq/sum((x-mean(x))^2))#
       mu <- beta/se_beta#
       alpha <- alpha/2#
       t_n <- qt(p=1-alpha,df=df)#
       res <- pt(q=-t_n, df=df, ncp=mu)-pt(q=t_n, df=df, ncp=mu)+1#
       return(res)#
}#
#
calculate_ump_power(beta=.1,n=100,sigma=5,x=getx(100))
fit <- loess(as.numeric(response) ~ abs(beta),data=dat,span=1.5)#
betas <- seq(0,2.5,by=.05)#
with(dat,qplot(betas,predict(fit,data.frame(beta=betas))))#
with(dat,qplot(beta,predict(fit)))
get_smooth_power <- function(dat.n,test="Empirical"){#
betas <- seq(0.01,2.5, by=0.05)#
dat_smooth <- NULL#
for (s in c(5)){#
	for (n in c(100)){#
		dats <- subset(dat.n,sigma==s & sample_size==n)#
		dats$y <- as.numeric(dats$response)#
		fit <- loess(y ~ abs(beta),data=dats,span=1+(n==100)*.3)#
		dat_smooth <- rbind(dat_smooth,cbind(betas,predict(fit,betas),n,s))#
		}#
	}#
colnames(dat_smooth) <- c("beta","pow","sample_size","sigma")#
dat_empirical <- data.frame(rbind(dat_smooth,cbind(-dat_smooth[,1],dat_smooth[,-1])))#
dat_empirical$test <- test#
return(dat_empirical)#
}
get_ump_power <- function(dat,test="UMP"){#
beta <- seq(0.01,2.5, by=0.05)#
dat_pow <- NULL#
for(n in c(100)){#
  for(sg in c(5)){#
     pow <- NULL#
     x <- getx(100)#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg,x=x))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
}}#
dat_pow$test <- test	#
return(dat_pow)#
}
dat_emp_pow <- get_smooth_power(dat)#
dat_ump_pow <- get_ump_power(dat)#
#
p <- ggplot(dat_emp_pow,aes(beta,pow)) + geom_line(aes(colour=test))#
p <- p + geom_line(aes(beta,pow, colour=test), data=dat_ump_pow)#
p <- p + facet_grid(sample_size~sigma)#
p + xlab(expression(beta))+ylab("Power")
dat_boot_pow <- read.csv("../data/dat_bootstrap_power2.txt")
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))           #
#
         #
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
p <- ggplot() +
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +
     facet_grid(sample_size~sigma) +
     xlab(expression(beta))+ylab("Power")
p
dat_boot_pow <- read.csv("../data/dat_bootstrap_power3.txt")
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))           #
#
         #
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
p <- ggplot() +
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +
     facet_grid(sample_size~sigma) +
     xlab(expression(beta))+ylab("Power")
p
head(dat_boot_pow)
tail(dat_boot_pow)
library(ggplot2)#
#
dat <- read.csv("../data/feedback_data_turk3_50p.txt")#
#
getx <- function(n){#
	x1 <- rnorm(n,0,1)#
	nc <- 15*n/100#
	x2 <- rnorm(n=nc,mean=-1.75, sd=1/3)#
	return(c(x2,x1))#
}#
getx(100)
calculate_ump_power <- function (beta, n, sigma,x){#
       alpha <- 0.05#
       sigmasq <- sigma^2#
       beta_not <- 0#
       df <- n-1 # one parameter(s)#
       se_beta <- sqrt(sigmasq/sum((x-mean(x))^2))#
       mu <- beta/se_beta#
       alpha <- alpha/2#
       t_n <- qt(p=1-alpha,df=df)#
       res <- pt(q=-t_n, df=df, ncp=mu)-pt(q=t_n, df=df, ncp=mu)+1#
       return(res)#
}#
#
calculate_ump_power(beta=.1,n=100,sigma=5,x=getx(100))
get_smooth_power <- function(dat.n,test="Empirical"){#
betas <- seq(0.01,2.5, by=0.05)#
dat_smooth <- NULL#
for (s in c(5)){#
	for (n in c(100)){#
		dats <- subset(dat.n,sigma==s & sample_size==n)#
		dats$y <- as.numeric(dats$response)#
		fit <- loess(y ~ abs(beta),data=dats,span=1+(n==100)*.3)#
		dat_smooth <- rbind(dat_smooth,cbind(betas,predict(fit,betas),n,s))#
		}#
	}#
colnames(dat_smooth) <- c("beta","pow","sample_size","sigma")#
dat_empirical <- data.frame(rbind(dat_smooth,cbind(-dat_smooth[,1],dat_smooth[,-1])))#
dat_empirical$test <- test#
return(dat_empirical)#
}
get_ump_power <- function(dat,test="UMP"){#
beta <- seq(0.01,2.5, by=0.05)#
dat_pow <- NULL#
for(n in c(100)){#
  for(sg in c(5)){#
     pow <- NULL#
     x <- getx(100)#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg,x=x))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
}}#
dat_pow$test <- test	#
return(dat_pow)#
}#
#
dat_emp_pow <- get_smooth_power(dat)#
dat_ump_pow <- get_ump_power(dat)#
#
p <- ggplot(dat_emp_pow,aes(beta,pow)) + geom_line(aes(colour=test))#
p <- p + geom_line(aes(beta,pow, colour=test), data=dat_ump_pow)#
p <- p + facet_grid(sample_size~sigma)#
p + xlab(expression(beta))+ylab("Power")
dat_boot_pow <- read.csv("../data/dat_bootstrap_power3.txt")
p <- ggplot(dat_boot_pow, aes(beta,pow,colour=grey)) + geom_line(aes(group=test),alpha=I(0.1))#
p + facet_grid(sample_size~sigma)
p <- ggplot() +#
     geom_line(aes(beta,pow, group =test), data=dat_boot_pow,alpha=I(0.3)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))           #
#
         #
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
head(dat_boot_pow)
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
head(dat_boot_ribbon
head(dat_boot_ribbon)
tail(dat_boot_ribbon)
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))
head(dat_obs_val)
tail(dat_obs_val)
p <- ggplot() +
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +
     facet_grid(sample_size~sigma) +
     xlab(expression(beta))+ylab("Power")
p
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
#
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val)
p
#
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon)
p
tail(dat_boot_ribbon)
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1])
)
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1]))
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
ggsave(p, filename="../images/power_loess_exp3.pdf", height=5.5, width=8.5)
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val, colour=alpha("black",.4)) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon, fill=alpha("black",.4)) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
ggsave(p, filename="../images/power_loess_exp3.pdf", height=5.5, width=8.5)
dat <- read.csv("../data/feedback_data_turk1_50p.txt")
pdat <- ddply(dat, .(p_value, sample_size), summarize,#
	attempted = sum(response==response),#
	corrected = sum(response=="TRUE"),#
	percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
#
# pdat$percent_correct <- pdat$corrected*100/pdat$attempted#
#
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2)
library(ggplot2)
pdat <- ddply(dat, .(p_value, sample_size), summarize,#
	attempted = sum(response==response),#
	corrected = sum(response=="TRUE"),#
	percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
#
# pdat$percent_correct <- pdat$corrected*100/pdat$attempted#
#
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2)
p
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     xlab(expression(paste("p-value(",p_B,")")))
p
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     xlab(expression(paste("p-value(",p[B],")")))#
p
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
paste("dat",i,sep="")
i=1
paste("dat",i,sep="")
eval(paste("dat",i,sep="")
)
?eval
parse(paste("dat",i,sep=""))
dat1 <- read.csv("../data/feedback_data_turk1_50p.txt")
parse(paste("dat",i,sep=""))
?parse
   dati < eval(parse(paste("dat",i,sep="")))
   dati <- eval(parse(paste("dat",i,sep="")))
dat1
paste("dat",i,sep="")
parse(text=paste("dat",i,sep=""))
eval(parse(text=paste("dat",i,sep="")))
   dati <- eval(parse(text=paste("dat",i,sep="")))
is.data.frame(dati)
dati
head(dati)
tail(dati)
pdat <- NULL#
for (i in 1:3){#
   dati <- eval(parse(text=paste("dat",i,sep="")))#
   pdati <- ddply(dati, .(p_value, sample_size), summarize,#
	  attempted = sum(response==response),#
	  corrected = sum(response=="TRUE"),#
	  percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
   pdati$experiment=i#
   pdat <- rbind(pdat,pdati)#
}
dat1 <- read.csv("../data/feedback_data_turk1_50p.txt")#
dat2 <- read.csv("../data/feedback_data_turk2_30p.txt")#
dat3 <- read.csv("../data/feedback_data_turk3_50p.txt")
pdat <- NULL#
for (i in 1:3){#
   dati <- eval(parse(text=paste("dat",i,sep="")))#
   pdati <- ddply(dati, .(p_value, sample_size), summarize,#
	  attempted = sum(response==response),#
	  corrected = sum(response=="TRUE"),#
	  percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
   pdati$experiment=i#
   pdat <- rbind(pdat,pdati)#
}
head(pdat)
tail(pdat)
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(experiment~.) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
pdat <- NULL#
for (i in 1:3){#
   dati <- eval(parse(text=paste("dat",i,sep="")))#
   pdati <- ddply(dati, .(p_value, sample_size), summarize,#
	  attempted = sum(response==response),#
	  corrected = sum(response=="TRUE"),#
	  percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
   pdati$experiment=paste("experiment",i)#
   pdat <- rbind(pdat,pdati)#
}
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
ggsave("../images/p_val_percent_correct.pdf")
ggsave("../images/p_val_percent_correct.pdf", height = 4.25, width = 10)
ggsave(p,file="../images/p_val_percent_correct.pdf", height = 4.25, width = 10)
#
powerdf <- data.frame(expand.grid(m = 5:50,#
pb=c(seq(0.05,0.5, by=0.05), seq(0.25, 0.5, by=0.05))))#
#
powerdf$power <- with(powerdf, (1-pb)^(m-1))#
#
qplot(m, power, geom="line", group=pb, data=powerdf, colour=pb) + geom_line(aes(m, 1/m), colour="grey30", lty=2) + geom_text(aes(label=sprintf("%.2f",pb)), data=subset(powerdf, m==5), hjust=1.1) + xlim(c(0,50)) + scale_colour_gradient(name=expression(p[B]))
ggsave(file="images/p_val_power_m.pdf")
ggsave(p,file="images/p_val_power_m.pdf", height = 4.25, width = 6)
p <- qplot(m, power, geom="line", group=pb, data=powerdf, colour=pb) + #
     geom_line(aes(m, 1/m), colour="grey30", lty=2) + #
     geom_text(aes(label=sprintf("%.2f",pb)), data=subset(powerdf, m==5), hjust=1.1) + #
     xlim(c(0,50)) + scale_colour_gradient(name=expression(p[B]))#
p     #
ggsave(p,file="images/p_val_power_m.pdf", height = 4.25, width = 6)
ggsave(p,file="../images/p_val_power_m.pdf", height = 4.25, width = 6)
dat1 <- read.csv("../data/feedback_data_turk1_50p.txt")#
dat2 <- read.csv("../data/feedback_data_turk2_30p.txt")
library(ggplot2)
dat1 <- read.csv("../data/feedback_data_turk1_50p.txt")#
dat2 <- read.csv("../data/feedback_data_turk2_30p.txt")#
dat3 <- read.csv("../data/feedback_data_turk3_50p.txt")
pdat <- NULL#
for (i in 1:3){#
   dati <- eval(parse(text=paste("dat",i,sep="")))#
   pdati <- ddply(dati, .(p_value, sample_size), summarize,#
	  attempted = sum(response==response),#
	  corrected = sum(response=="TRUE"),#
	  percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
   pdati$experiment=paste("experiment",i)#
   pdat <- rbind(pdat,pdati)#
}
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
head(pdat)
pdat$strength <- 1- pdat$percent_correct^(1/19)
p <- ggplot() +#
     geom_point(aes(strength,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline()#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept = 0, slope = 1)#
p
pdat$strength <- 1- pdat$percent_correct^(1/19)#
pdat$intercept <- 0#
pdat$slope <- 1#
#
#
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept , slope )#
p
pdat$strength <- 1- pdat$percent_correct^(1/19)#
pdat$a <- 0#
pdat$b <- 1#
#
#
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept , slope )#
p
pdat$strength <- 1- pdat$percent_correct^(1/19)#
pdat$a <- 0#
pdat$b <- 1#
#
#
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=a , slope=b )#
p
head(pdat)
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=a,slope=b)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(aes(intercept=a,slope=b))#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(aes(intercept=a,slope=b), data=data.frame(a=0,b=1))#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(aes(intercept=a,slope=b), data=data.frame(a=0,b=1,experiment=c("experiment1","experiment2","experiment3")))#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=0,slope=1)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) +      facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=0,slope=1)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),facet=.~experiment,data=pdat,size=2) + #
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=0,slope=1)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),facet=experiment,data=pdat,size=2) + #
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=0,slope=1)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment)#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=0,slope=1)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=0,slope=1)#
p
pdat$strength <- 1- pdat$percent_correct^(1/19)#
pdat$a <- 0#
pdat$b <- 1
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(intercept=a,slope=b)#
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     geom_abline(intercept=a,slope=b)
p <- ggplot() +#
     geom_point(aes(p_value,strength),data=pdat,size=2) + #
     geom_abline(aes(intercept=a,slope=b))
p
pdat
head(pdat)
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2)
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     geom_abline(aes(intercept=a,slope=b))
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     geom_abline(aes(intercept=a,slope=b)) +#
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     #
p
factor(20,40,5)
factorc((20,40,5))
factor(c(20,40,5))
factor(c(20,40,5))*1
as.numeric(factor(c(20,40,5)))
as.numeric(as.character(factor(c(20,40,5))))
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_abline(aes(intercept=0,slope=1)) #
     #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     geom_smooth() #
     #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     stat_smooth() #
     #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
#     ylim(-.3,.2) + xlim(0,.2) +#
     stat_smooth() #
     #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
#
     stat_smooth() #
     #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +stat_smooth()
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) +  geom_smooth() #
     facet_grid(.~experiment)
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) +  geom_smooth() +#
     facet_grid(.~experiment)
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),size=2, data=pdat) +  geom_smooth() +#
     facet_grid(.~experiment)
p
p <- ggplot() +#
     geom_point(aes(p_value,strength),size=2, data=pdat) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2)
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2)
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2) +#
     stat_smooth()    #
p
library(ggplot2)
dat1 <- read.csv("../data/feedback_data_turk1_50p.txt")#
dat2 <- read.csv("../data/feedback_data_turk2_30p.txt")#
dat3 <- read.csv("../data/feedback_data_turk3_50p.txt")
pdat <- NULL#
for (i in 1:3){#
   dati <- eval(parse(text=paste("dat",i,sep="")))#
   pdati <- ddply(dati, .(p_value, sample_size), summarize,#
	  attempted = sum(response==response),#
	  corrected = sum(response=="TRUE"),#
	  percent_correct = sum(response=="TRUE")*100/sum(response==response)#
	)#
   pdati$experiment=paste("experiment",i)#
   pdat <- rbind(pdat,pdati)#
}
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2)    #
p
pdat$strength <- 1- pdat$percent_correct^(1/19)
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2)    #
p
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses")#
p
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses") + geom_smooth()#
p
p <- ggplot() +#
     geom_point(aes(p_value,percent_correct),data=pdat,size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("Percentage of correct responses") #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+#
     ylim(-.3,.2) + xlim(0,.2)    #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength")+   #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength") #
p
pdat
pdat$strength <- (1- pdat$percent_correct/100)^(1/19)
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength") #
p
pdat$strength <- 1- (pdat$percent_correct/100)^(1/19)
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength") #
p
p <- ggplot(pdat) +#
     geom_point(aes(p_value,strength),size=2) + #
     facet_grid(.~experiment) +#
     xlab(expression(paste("p-value(",p[B],")"))) +#
     ylab("plot signal strength") + geom_abline(aes(intercept=0,slope=1))#
p
dat <- read.csv("../data/feedback_data_turk2_30p.txt")
calculate_ump_power <- function (beta, n, sigma){#
	# n <- 100#
	# sigmasq <- 12^2#
	alpha <- 0.05#
	sigmasq <- sigma^2#
	beta_not <- 0#
	df <- n-2 # two parameters#
	x <- subset(read.csv("../data/Xdata.csv"),N==n)[,1]#
   se_beta <- sqrt(sigmasq/sum((x-mean(x))^2)) #
	mu <- beta/se_beta#
	alpha <- alpha/2#
	t_n <- qt(p=1-alpha,df=df)#
	res <- pt(q=-t_n, df=df, ncp=mu)-pt(q=t_n, df=df, ncp=mu)+1#
	return(res)#
}#
#
calculate_ump_power(beta = 5.15,n=100,sigma=12)
bet <- seq(-4,4, by=.1)#
pw <- sapply(bet,calculate_ump_power,n=300,sigma=12)#
qplot(bet,pw, geom="line")
library(ggplot2)
bet <- seq(-4,4, by=.1)#
pw <- sapply(bet,calculate_ump_power,n=300,sigma=12)#
qplot(bet,pw, geom="line")
qplot(bet,pw, geom="line") + xlab(expression(beta))
qplot(bet,pw, geom="line") + #
   xlab(expression(beta))  +#
   ylab("Power")
qplot(bet,pw, geom="line") + #
   xlab(expression(beta))  +#
   ylab("UMP Power")
get_smooth_power <- function(dat.n,test="Empirical"){#
 betas <- seq(0.01,6.5, by=.2)#
 dat_smooth <- NULL#
 for (s in c(5,12)){#
	for (n in c(100,300)){#
		dats <- subset(dat.n,sigma==s & sample_size==n)#
		dats$y <- as.numeric(dats$response)#
		fit <- loess(y ~ abs(beta),data=dats,span=1+(n==100)*.3)#
		dat_smooth <- rbind(dat_smooth,cbind(betas,predict(fit,betas),n,s))#
		}#
	}#
 colnames(dat_smooth) <- c("beta","pow","sample_size","sigma")#
 dat_empirical <- data.frame(rbind(dat_smooth,cbind(-dat_smooth[,1],dat_smooth[,-1])))#
 dat_empirical$test <- test#
 return(dat_empirical)#
}
get_ump_power <- function(dat,test="UMP"){#
 beta <- seq(0.01,6.5, by=.2)#
 dat_pow <- NULL#
 for(n in c(100,300)){#
  for(sg in c(5,12)){#
     pow <- NULL#
     for (i in beta)pow <- c(pow,calculate_ump_power(beta=i,n=n,sigma=sg))#
     dat_ump <- data.frame(beta=c(-beta,beta),pow=c(pow,pow))#
     dat_ump$sample_size <- n#
     dat_ump$sigma <- sg#
     #head(dat_ump)#
     dat_pow <- rbind(dat_pow,dat_ump)#
  }#
 }#
 dat_pow$test <- test	#
 return(dat_pow)#
}
dat_emp_pow <- get_smooth_power(dat)#
dat_ump_pow <- get_ump_power(dat)#
#
p <- ggplot(dat_emp_pow,aes(beta,pow)) + geom_line(aes(colour=test))#
p <- p + geom_line(aes(beta,pow, colour=test), data=dat_ump_pow)#
p <- p + facet_grid(sample_size~sigma)#
p + xlab(expression(beta))+ylab("Power")
dat_boot_pow <- read.csv("../data/dat_bootstrap_power2.txt")
dat_obs_val <- ddply(dat,.(abs(beta),sample_size,sigma,response), summarize,#
           responses = length(response)#
           )#
colnames(dat_obs_val) <- c("beta", colnames(dat_obs_val)[-1])           #
dat_obs_val <- rbind(dat_obs_val,cbind(beta= -dat_obs_val[,1],dat_obs_val[,-1]))
dat_boot_ribbon <-  ddply(dat_boot_pow,.(abs(beta),sample_size,sigma), summarize,#
           limit1 = quantile(pow,.025, na.rm=T),#
           limit2 = quantile(pow,.975, na.rm=T)#
           )#
colnames(dat_boot_ribbon) <- c("beta",colnames(dat_boot_ribbon)[-1])           #
dat_boot_ribbon <- rbind(dat_boot_ribbon,cbind(beta= -dat_boot_ribbon[,1],dat_boot_ribbon[,-1]))
p <- ggplot() +#
     geom_point(aes(beta,as.numeric(response), size=responses), data=dat_obs_val) +#
     geom_ribbon(aes(x=beta,ymin=limit1,ymax=limit2), data=dat_boot_ribbon) +#
     geom_line(aes(beta,pow, colour=test), data=dat_emp_pow) +#
     geom_line(aes(beta,pow, colour=test), data=dat_ump_pow) +#
     facet_grid(sample_size~sigma) +#
     xlab(expression(beta))+ylab("Power") #
p
